consumes:
- application/json
definitions:
  PostTopicPayload:
    example:
      author: Non non tempora id consequatur dolor.
      content: oyp9dknlxr
    properties:
      author:
        description: Author of this topic
        example: Non non tempora id consequatur dolor.
        type: string
      content:
        description: Content of the topic
        example: oyp9dknlxr
        maxLength: 255
        type: string
    required:
    - content
    - author
    title: PostTopicPayload
    type: object
  RegisterUserPayload:
    example:
      country: Qui et quia recusandae voluptatem blanditiis.
      name: Ipsum voluptatem aut tenetur veniam accusamus.
      password: Placeat quasi aspernatur est omnis perspiciatis illo.
    properties:
      country:
        description: country of the user
        example: Qui et quia recusandae voluptatem blanditiis.
        type: string
      name:
        description: username
        example: Ipsum voluptatem aut tenetur veniam accusamus.
        type: string
      password:
        description: password of the user
        example: Placeat quasi aspernatur est omnis perspiciatis illo.
        type: string
    required:
    - name
    - password
    - country
    title: RegisterUserPayload
    type: object
  VoteTopicPayload:
    example:
      userName: Qui iste et.
      vote: down
    properties:
      userName:
        description: username
        example: Qui iste et.
        type: string
      vote:
        description: upvote/downvote topic
        enum:
        - up
        - down
        example: down
        type: string
    required:
    - userName
    - vote
    title: VoteTopicPayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609066e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609066e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
info:
  description: Carousell Challenge.
  title: Carousell Challenge
  version: "0.1"
paths:
  /{filepath}:
    get:
      operationId: public#/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      - https
      summary: Download public/
  /api/v1/topics:
    get:
      description: Show top 20 topics sorted by upvotes (in descending order)
      operationId: topic#show
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: show topic
      tags:
      - topic
    post:
      description: Post new topic for user
      operationId: topic#post
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/PostTopicPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: post topic
      tags:
      - topic
  /api/v1/topics/{topicID}:
    patch:
      description: Upvote/Downvote topic
      operationId: topic#vote
      parameters:
      - in: path
        name: topicID
        required: true
        type: string
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/VoteTopicPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: vote topic
      tags:
      - topic
  /api/v1/users:
    post:
      description: Register new user with input details to registry
      operationId: user#register
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RegisterUserPayload'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: register user
      tags:
      - user
  /api/v1/users/{userName}:
    delete:
      description: Remove user from registry
      operationId: user#remove
      parameters:
      - in: path
        name: userName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: remove user
      tags:
      - user
    get:
      description: Login user
      operationId: user#login
      parameters:
      - description: password of the user
        in: query
        name: password
        required: true
        type: string
      - in: path
        name: userName
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      - https
      summary: login user
      tags:
      - user
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
      summary: Download swagger/swagger.json
produces:
- application/json
schemes:
- http
- https
swagger: "2.0"
